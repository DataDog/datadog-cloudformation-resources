<?xml version="1.0" encoding="UTF-8"?>
<!-- This is a parent pom file specifying shared dependencies for all the resources -->
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.datadoghq</groupId>
    <artifactId>cloudformation-resources</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <aws-cloudformation-plugin-version>2.0.1</aws-cloudformation-plugin-version>
        <!-- NOTE: When updating this, also update version in datadog-cloudformation-common/pom.xml
             Also see a note in that file for a reason why it's necessary to do in two places. -->
        <datadog-api-client-version>1.0.0-beta.7</datadog-api-client-version>
        <datadog-cloudformation-common-version>1.0.2</datadog-cloudformation-common-version>
        <jackson-version>2.10.4</jackson-version>
        <jackson-databind-version>2.10.4</jackson-databind-version>
        <jackson-databind-nullable-version>0.2.0</jackson-databind-nullable-version>
    </properties>

    <repositories>
        <repository>
            <id>bintray-datadog-datadog-maven</id>
            <name>bintray</name>
            <url>https://dl.bintray.com/datadog/datadog-maven</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.datadoghq</groupId>
            <artifactId>datadog-cloudformation-common</artifactId>
            <version>${datadog-cloudformation-common-version}</version>
        </dependency>
        <!-- https://github.com/awslabs/aws-cloudformation-rpdk-java-plugin/ -->
        <dependency>
            <groupId>software.amazon.cloudformation</groupId>
            <artifactId>aws-cloudformation-rpdk-java-plugin</artifactId>
            <version>${aws-cloudformation-plugin-version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.datadoghq</groupId>
            <artifactId>datadog-api-client</artifactId>
            <version>${datadog-api-client-version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.12.2</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.5.0-M1</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.26.0</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>2.26.0</version>
            <scope>test</scope>
        </dependency>
        <!-- We need to ensure that all Jackson dependencies of DD client and AWS CF SDK are pinned to 
        the same version. The DD client and AWS CF SDK use different subsets of Jackson libraries
        and not pinning all of them can lead to various class loading issues because of the version mix.-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-cbor</artifactId>
            <version>${jackson-databind-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-modules-java8</artifactId>
            <version>${jackson-databind-version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable-version}</version>
        </dependency>
    </dependencies>
</project>
